name: 'Terraform'

on:
  push:
    branches:
    - githubactions

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    env:
      ARM_SUBSCRIPTION_ID: "b6a69b21-5dea-4475-9cd5-e9f2f8eb1e27"
      ARM_TENANT_ID: "72f988bf-86f1-41af-91ab-2d7cd011db47"
      ARM_CLIENT_ID: "502075fb-4b18-4a3b-8cc2-af49996bc8d2"
      TF_CLI_ARGS_init: "-backend-config=./backend.tfvars"
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v1
    
    - name: Install fluxctl
      uses: fluxcd/fluxctl-action@master
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      run: terraform apply -auto-approve
